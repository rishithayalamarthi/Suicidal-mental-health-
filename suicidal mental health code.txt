import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
from google.colab import drive
drive.mount('/content/drive')
x = pd.read_csv("/content/drive/MyDrive/health.csv")
x.head()
x.shape
x.info()
x.dropna()
from sklearn.model_selection import train_test_split
df = pd.DataFrame(x)
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, classification_report
from sklearn.naive_bayes import MultinomialNB
x.dropna(subset=['text'],inplace=True)
x['text'].fillna('',inplace=True)
X = x['text']
y = x['label']
X_train,X_test,y_train,y_test= train_test_split(X,y,test_size=0.2,random_state=42)
vectorizer = CountVectorizer()
X_train_vectorized = vectorizer.fit_transform(X_train)
X_test_vectorized = vectorizer.transform(X_test)
y.value_counts()
y=pd.get_dummies(y)
y=y.drop(['depression'],axis=1)
y
x = x.join(y)
x
x=x.drop(['label'],axis=1)
x.head()
X_train,X_test,y_train,y_test= train_test_split(X,y,test_size=0.2,random_state=42)
vectorizer = CountVectorizer()
X_train_vectorized = vectorizer.fit_transform(X_train)
X_test_vectorized = vectorizer.transform(X_test)
nb_classifier = MultinomialNB()
nb_classifier.fit(X_train_vectorized,y_train)
 y_pred = nb_classifier.predict(X_test_vectorized)
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:",accuracy)
accuracy*100
print("Classification Report:")
print(classification_report(y_test,y_pred))